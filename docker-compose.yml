version: '3.10'
services:
  mysql:
    image: mysql:8.0.33
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootroot
      MYSQL_DATABASE: wordmasterdb
      MYSQL_USER: wordmaster
      MYSQL_PASSWORD: wordmaster123
      MYSQL_MAX_ALLOWED_PACKET: 128M
      TZ: UTC
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init/init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./mysql-init/schema.sql:/docker-entrypoint-initdb.d/2-schema.sql
      - ./mysql-init/data.sql:/docker-entrypoint-initdb.d/3-data.sql
      - ./mysql-init/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro
    networks:
      - app-network
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
      --max_allowed_packet=128M
      --bind-address=0.0.0.0
      --secure-file-priv=/var/lib/mysql-files
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "wordmaster", "-pwordmaster123"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: spring-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/wordmasterdb?allowPublicKeyRetrieval=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=wordmaster
      - SPRING_DATASOURCE_PASSWORD=wordmaster123
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: nextjs-frontend
    ports:
      - "3000:3000"
    environment:
      - BACKEND_API=http://backend:8080
    depends_on:
      - backend
      - mysql
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge